name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  PACKAGE_NAME: conda-build-test
  GITHUB_REPO: chrisjbillington/conda-build-test

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    #### build configuration section. Pick one config and comment out the other two ####

    # Configuration for a package with compiled extensions.
    # * A source distribution will be built on ubuntu-latest.
    # * A wheel distribution will be built on each OS in the build matrix, targeting
    #   Python versions specified in CIBW_BUILD.
    # * A conda package will be built on each OS in the build matrix, targeting Python
    #   versions specified in CONDA_PYTHONS.
    env:
      PURE_WHEEL: false
      CONDA_NOARCH: false
      CIBW_BUILD: 'cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*'
      CONDA_PYTHONS: '3.8,3.9,3.10,3.11,3.12,3.13'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]

    # # Configuration for a package with no compiled extensions, but which has
    # # dependencies that differ by platform or Python version.
    # # * A source distribution will be built on ubuntu-latest.
    # # * A pure wheel distribution will be built on ubuntu-latest
    # # * Conda packages will be built on each OS in the build matrix, targeting Python
    # #   versions specified in CONDA_PYTHONS.
    # env:
    #   PURE_WHEEL: true
    #   CONDA_NOARCH: false
    #   CONDA_PYTHONS: '3.8,3.9,3.10,3.11,3.12,3.13'
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest, windows-latest, macos-13, macos-latest]

    # # Configuration for a package with no extensions and the same dependencies on all
    # # platforms and Python versions.
    # # * A source distribution will be built on ubuntu-latest.
    # # * A pure wheel distribution will be built on ubuntu-latest
    # # * A noarch conda package will be built on ubuntu-latest
    # env:
    #   PURE_WHEEL: true
    #   CONDA_NOARCH: true
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest]

    #### end build configuration section ####

    # if: github.repository == 'chrisjbillington/conda-build-test'
    if: github.repository == vars.EXPECTED_REPO
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python Build Tools
        run: python -m pip install --upgrade pip setuptools wheel build cibuildwheel

      - name: Source Distribution
        if: strategy.job-index == 0
        run: python -m build -s .

      - name: Wheel Distribution (pure)
        if: (env.PURE_WHEEL == 'true' && strategy.job-index == 0)
        run: python -m build -w .

      - name: Wheel Distribution (impure)
        if: env.PURE_WHEEL == 'false'
        run: cibuildwheel --output-dir dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: ./dist
          if-no-files-found: error

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          auto-update-conda: true
          conda-remove-defaults: true
          auto-activate-base: true
          activate-environment: ""

      - name: Configure Conda Build
        shell: bash
        run: |
          if [ $CONDA_NOARCH == true ]; then
              CONDA_BUILD_ARGS="--noarch"
          else
              CONDA_BUILD_ARGS="--pythons=$CONDA_PYTHONS"
          fi
          if [ ${{ runner.os }} == Windows ]; then
              # Short path to minimise odds of hitting Windows max path length
              CONDA_BUILD_ARGS+=" --croot ${{ runner.temp }}\cb"
          fi
          echo "CONDA_BUILD_ARGS=$CONDA_BUILD_ARGS" >> $GITHUB_ENV

      - name: Conda package
        shell: bash -l {0}
        run: |
          conda install -c labscript-suite setuptools-conda
          setuptools-conda build $CONDA_BUILD_ARGS .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: conda_packages-${{ matrix.os }}
          path: ./conda_packages
          if-no-files-found: error
