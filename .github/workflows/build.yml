name: Build and Release

on:
  push:
    branches:
      - master

env:
  # Configuration for a package with compiled extensions:
  PURE: false
  NOARCH: false

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest,   python: '3.13',  arch: x64,    conda: true }
          - { os: ubuntu-latest,   python: '3.12',  arch: x64,    conda: true }
          - { os: ubuntu-latest,   python: '3.11',  arch: x64,    conda: true }
          - { os: ubuntu-latest,   python: '3.10',  arch: x64,    conda: true }
          - { os: ubuntu-latest,   python: '3.9',   arch: x64,    conda: true }
          - { os: ubuntu-latest,   python: '3.8',   arch: x64,    conda: true }

          - { os: macos-13,        python: '3.13',  arch: x64,    conda: true }
          - { os: macos-13,        python: '3.12',  arch: x64,    conda: true }
          - { os: macos-13,        python: '3.11',  arch: x64,    conda: true }
          - { os: macos-13,        python: '3.10',  arch: x64,    conda: true }
          - { os: macos-13,        python: '3.9',   arch: x64,    conda: true }
          - { os: macos-13,        python: '3.8',   arch: x64,    conda: true }

          - { os: macos-latest,    python: '3.13',  arch: arm64,  conda: true }
          - { os: macos-latest,    python: '3.12',  arch: arm64,  conda: true }
          - { os: macos-latest,    python: '3.11',  arch: arm64,  conda: true }
          - { os: macos-latest,    python: '3.10',  arch: arm64,  conda: true }
          - { os: macos-latest,    python: '3.9',   arch: arm64,  conda: true }
          - { os: macos-latest,    python: '3.8',   arch: arm64,  conda: true }

          - { os: windows-latest,  python: '3.13',  arch: x64,    conda: true }
          - { os: windows-latest,  python: '3.12',  arch: x64,    conda: true }
          - { os: windows-latest,  python: '3.11',  arch: x64,    conda: true }
          - { os: windows-latest,  python: '3.10',  arch: x64,    conda: true }
          - { os: windows-latest,  python: '3.9',   arch: x64,    conda: true }
          - { os: windows-latest,  python: '3.8',   arch: x64,    conda: true }

          - { os: windows-latest,  python: '3.13',  arch: x86,    conda: false }
          - { os: windows-latest,  python: '3.12',  arch: x86,    conda: false }
          - { os: windows-latest,  python: '3.11',  arch: x86,    conda: false }
          - { os: windows-latest,  python: '3.10',  arch: x86,    conda: false }
          - { os: windows-latest,  python: '3.9',   arch: x86,    conda: false }
          - { os: windows-latest,  python: '3.8',   arch: x86,    conda: false }


    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set setuptools-conda build arguments
        if: matrix.conda
        shell: bash
        run: |
          CONDA_BUILD_ARGS="--pythons=${{ matrix.python }}"
          if [ $NOARCH == true ]; then
              CONDA_BUILD_ARGS+=" --noarch"
          fi
          if [ ${{ runner.os }} == Windows ]; then
              # Short path to minimise odds of hitting Windows max path length
              CONDA_BUILD_ARGS+=" --croot ${{ runner.temp }}\cb"
          fi 
          echo "CONDA_BUILD_ARGS=$CONDA_BUILD_ARGS" >> $GITHUB_ENV

      - name: Install Miniconda
        if: matrix.conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-version: "latest"
          conda-remove-defaults: true
          auto-activate-base: true
          activate-environment: ""

      - name: Conda package (Unix)
        if: (matrix.conda && runner.os != 'Windows')
        shell: bash -l {0}
        run: |
          conda install -c labscript-suite/label/test setuptools-conda
          setuptools-conda build $CONDA_BUILD_ARGS .

      - name: Conda Package (Windows)
        if: (matrix.conda && runner.os == 'Windows')
        shell: cmd /C CALL {0}
        run: |
          conda install -c labscript-suite/label/test setuptools-conda && ^
          setuptools-conda build %CONDA_BUILD_ARGS% --croot ${{ runner.temp }}\cb .

      - name: Upload Artifact
        if: matrix.conda
        uses: actions/upload-artifact@v4
        with:
          name: conda_packages-${{ matrix.os }}-py${{ matrix.python }}-${{ matrix.arch }}
          path: ./conda_packages
