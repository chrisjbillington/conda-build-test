name: Build and Release

on:
  push:
    branches:
      - master

env:
  # Configuration for a package with compiled extensions:
  PURE: false
  NOARCH: false

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest,   arch: x64 }
          - { os: windows-latest,  arch: x64 }
          - { os: macos-13,        arch: x64 }
          - { os: macos-latest,    arch: arm64 }
    env:
      CONDA_PYTHON: '3.8,3.9,3.10,3.11,3.12,3.13'
      CIBW_BUILD: 'cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*'

    if: github.repository == 'chrisjbillington/conda-build-test'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ignore Tags
        if: github.event.ref_type == 'push' && contains(github.ref, '/tags')
        run: git tag -d $(git tag --points-at HEAD)

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python build tools
        run: python -m pip install --upgrade pip setuptools wheel build cibuildwheel

      - name: Source Distribution
        if: strategy.job-index == 0
        run: python -m build -s .

      - name: Wheel Distribution (pure)
        if: env.PURE == 'true'
        run: python -m build -w .

      - name: Wheel Distribution (impure)
        if: env.PURE == 'false'
        run: cibuildwheel --output-dir dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.arch }}
          path: ./dist

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          architecture: ${{ matrix.arch }}
          miniforge-version: "latest"
          auto-update-conda: true
          conda-remove-defaults: true
          auto-activate-base: true
          activate-environment: ""

      - name: Configure conda build
        shell: bash
        run: |
          if [ $NOARCH == true ]; then
              CONDA_BUILD_ARGS="--noarch"
          else
              CONDA_BUILD_ARGS="--pythons=$CONDA_PYTHON"
          fi
          if [ ${{ runner.os }} == Windows ]; then
              # Short path to minimise odds of hitting Windows max path length
              CONDA_BUILD_ARGS+=" --croot ${{ runner.temp }}\cb"
          fi
          echo "CONDA_BUILD_ARGS=$CONDA_BUILD_ARGS" >> $GITHUB_ENV

      - name: Conda package # (Unix)
        # if: (runner.os != 'Windows')
        shell: bash -l {0}
        run: |
          conda install -c labscript-suite setuptools-conda
          setuptools-conda build $CONDA_BUILD_ARGS .

      # - name: Conda Package (Windows)
      #   if: (runner.os == 'Windows')
      #   shell: cmd /C CALL {0}
      #   run: |
      #     conda install -c labscript-suite setuptools-conda && ^
      #     setuptools-conda build %CONDA_BUILD_ARGS% .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: conda_packages-${{ matrix.os }}-${{ matrix.arch }}
          path: ./conda_packages

